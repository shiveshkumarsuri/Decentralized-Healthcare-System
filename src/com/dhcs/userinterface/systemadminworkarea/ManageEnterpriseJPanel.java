package com.dhcs.userinterface.systemadminworkarea;

import com.dhcs.business.DecentralizedHealthCareSystem;
import com.dhcs.business.enterprise.Enterprise;
import com.dhcs.business.network.Network;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

/**
 *
 * @author Shivesh
 */
public class ManageEnterpriseJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DecentralizedHealthCareSystem system;
    private static final Logger logger = Logger.getLogger(ManageEnterpriseJPanel.class);
    /**
     * Creates new form ManageEnterpriseJPanel
     * @param userProcessContainer
     * @param system
     */
    public ManageEnterpriseJPanel(JPanel userProcessContainer, DecentralizedHealthCareSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
          "Bookman Old Style", Font.BOLD, 18))); 
        enterpriseJTable.getTableHeader().setFont(new Font("MS Reference Sans Serif", Font.BOLD, 18));
        populateTable();
        populateComboBox();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                Object[] row = new Object[3];
                row[0] = enterprise.getName();
                row[1] = network.getName();
                row[2] = enterprise.getEnterpriseType().getValue();

                model.addRow(row);
            }
        }
    }

    private void populateComboBox() {
        networkJComboBox.removeAllItems();
        enterpriseTypeJComboBox.removeAllItems();

        for (Network network : system.getNetworkList()) {
            networkJComboBox.addItem(network);
        }

        for (Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()) {
            enterpriseTypeJComboBox.addItem(type);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enterpriseTypeJComboBox = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 24)); // NOI18N

        enterpriseJTable.setBackground(new java.awt.Color(204, 204, 204));
        enterpriseJTable.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 24)); // NOI18N
        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        enterpriseJTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        enterpriseJTable.setRowHeight(25);
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 1180, 130));

        jLabel1.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Network");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 350, -1, 50));

        networkJComboBox.setBackground(new java.awt.Color(76, 128, 128));
        networkJComboBox.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 24)); // NOI18N
        add(networkJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(842, 350, 480, 55));

        jLabel2.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 500, -1, 50));

        nameJTextField.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 24)); // NOI18N
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(842, 510, 480, 55));

        jLabel3.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 30)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Enterprise Type");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 420, -1, 50));

        enterpriseTypeJComboBox.setBackground(new java.awt.Color(76, 128, 128));
        enterpriseTypeJComboBox.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 24)); // NOI18N
        add(enterpriseTypeJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(842, 430, 480, 55));

        submitJButton.setBackground(new java.awt.Color(43, 210, 81));
        submitJButton.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 24)); // NOI18N
        submitJButton.setText("Submit");
        submitJButton.setBorder(null);
        submitJButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 810, 300, 60));

        backJButton.setBackground(new java.awt.Color(0, 153, 153));
        backJButton.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 24)); // NOI18N
        backJButton.setText(" Back");
        backJButton.setBorder(null);
        backJButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 820, 300, 60));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/dhcs/util/image/enterprise.jpg"))); // NOI18N
        jLabel4.setMaximumSize(new java.awt.Dimension(1700, 1000));
        jLabel4.setMinimumSize(new java.awt.Dimension(1700, 1000));
        jLabel4.setPreferredSize(new java.awt.Dimension(1700, 1000));
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1700, 1000));
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        
        boolean enterpriseFlag;
        Network network = (Network) networkJComboBox.getSelectedItem();
        Enterprise.EnterpriseType type = (Enterprise.EnterpriseType) enterpriseTypeJComboBox.getSelectedItem();

        if (network == null || type == null) {
            JOptionPane.showMessageDialog(null, "Invalid Input!");
            return;
        }

        String name = nameJTextField.getText();
        if(!name.trim().isEmpty()){
                if(network.getEnterpriseDirectory().checkIfEnterpriseNameIsUnique(name)) {

                    enterpriseFlag = network.getEnterpriseDirectory().createAndAddEnterprise(name, type);
                    if(!enterpriseFlag){
                        JOptionPane.showMessageDialog(this, "Only one Enterprise of "+ type + " can be created each Network !",
                        "Decentralised Health Care System",JOptionPane.WARNING_MESSAGE);
                        nameJTextField.setText("");
                    }
                        populateTable();
                        JOptionPane.showMessageDialog(null, "Enterprise "+nameJTextField.getText()+" added successfully",
                        "Decentralised Health Care System",JOptionPane.INFORMATION_MESSAGE);
                        nameJTextField.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "Enterprise name "+nameJTextField.getText()+" already exists",
                        "Decentralised Health Care System",JOptionPane.INFORMATION_MESSAGE);
                    nameJTextField.setText("");
                    logger.debug("Enterprise name already exists"+network.getEnterpriseDirectory());
                }
           }else{
                logger.debug("Enterprise name cannot be left blank");
                JOptionPane.showMessageDialog(this, "Please enter a valid Enterprise name ",
                        "Decentralised Health Care System",JOptionPane.WARNING_MESSAGE);
            }

    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
         Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JComboBox enterpriseTypeJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
